if __name__ == '__main__':
    t = int(input())
    for _ in range(t):
        k = int(input())
        ob = Solution()
        print(ob.xorCal(k))

class Solution:
    def xorCal(self,k):
        return (k//2 if ((k % 2) and (k & (k+1) == 0)) else -1) if k != 1 else 2


# n^(n+1) = k
# 1 ^ 2 = 3
# 2 ^ 3 = 1
# 3 ^ 4 = 7
# 4 ^ 5 = 1
# 5 ^ 6 = 3
# 6 ^ 7 = 1
# 7 ^ 8 = 15
# 8 ^ 9 = 1
# 9 ^ 10 = 3
# 10 ^ 11 = 1
# 11 ^ 12 = 7
 
#  3 ->  3 & 4 = 0
#  if k is even and k & k+1 == 0 then return k // 2, else return -1
